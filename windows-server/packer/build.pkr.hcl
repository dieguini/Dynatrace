variable "iso_url" {
  default = "./iso-image/WindowsServer2012R2-Eval.iso"
}

variable "iso_checksum" {
  default = "sha256:6612B5B1F53E845AACDF96E974BB119A3D9B4DCB5B82E65804AB7E534DC7B4D5"
}

/* variable "iso_checksum_type" {
  default = "sha256"
} */

variable "autounattend" {
  type    = string
  default = "./Autounattend.xml"
}

variable "disk_size" {
  type    = string
  default = "25600"
}

variable "disk_type_id" {
  type    = string
  default = "1"
}

variable "headless" {
  type    = string
  default = "false"
}

variable "hyperv_switchname" {
  type    = string
  default = "${env("hyperv_switchname")}"
}

/* variable "manually_download_iso_from" {
  type    = string
  default = "https://www.microsoft.com/en-us/evalcenter/evaluate-windows-server-2022"
} */

variable "memory" {
  type    = string
  default = "4096"
}

variable "restart_timeout" {
  type    = string
  default = "5m"
}

/*variable "virtio_win_iso" {
  type    = string
  default = "~/virtio-win.iso"
}*/

/*variable "vmx_version" {
  type    = string
  default = "14"
}*/

variable "winrm_timeout" {
  type    = string
  default = "2h"
}

source "virtualbox-iso" "autogenerated" {
  boot_wait            = "2m"
  communicator         = "winrm"
  cpus                 = 2
  disk_size            = "${var.disk_size}"
  floppy_files         = ["${var.autounattend}", "./autounattend_provision/disable-screensaver.ps1", "./autounattend_provision/disable-winrm.ps1", "./autounattend_provision/enable-winrm.ps1", "./autounattend_provision/unattend.xml", "./autounattend_provision/sysprep.bat"]
  guest_additions_mode = "disable"
  guest_os_type        = "Windows2012_64"
  headless             = "${var.headless}"
  iso_checksum         = "${var.iso_checksum}"
  iso_url              = "${var.iso_url}"
  # iso_checksum_type    = "${var.iso_checksum_type}"
  memory           = "${var.memory}"
  shutdown_command = "a:/sysprep.bat"
  vm_name          = "WindowsServer2012"
  winrm_password   = "vagrant"
  winrm_timeout    = "${var.winrm_timeout}"
  winrm_username   = "vagrant"
}

build {
  sources = ["source.virtualbox-iso.autogenerated"]

  provisioner "windows-shell" {
    execute_command = "{{ .Vars }} cmd /c \"{{ .Path }}\""
    scripts         = ["./provision_scripts/enable-rdp.bat"]
  }

  provisioner "powershell" {
    scripts = ["./provision_scripts/vm-guest-tools.ps1"]
  }

  provisioner "powershell" {
    scripts = [
      "./provision_scripts/vm-guest-tools.ps1",
      # "./provision_scripts/debloat-windows.ps1"
    ]
  }

  provisioner "windows-restart" {
    restart_timeout = "${var.restart_timeout}"
  }

  provisioner "windows-shell" {
    execute_command = "{{ .Vars }} cmd /c \"{{ .Path }}\""
    scripts = [
      "./provision_scripts/pin-powershell.bat",
      "./provision_scripts/set-winrm-automatic.bat",
      "./provision_scripts/uac-enable.bat",
      "./provision_scripts/compile-dotnet-assemblies.bat",
      # TODO Check Windows Server 2012 R2 specification
      # "./provision_scripts/dis-updates.bat",
      "./provision_scripts/compact.bat"
    ]
  }

  /* post-processor "vagrant" {
    keep_input_artifact  = false //artifact will be deleted
    output               = "windows_2012_{{.Provider}}.box"
    vagrantfile_template = "vagrantfile-windows_2016.template"
  } */

  post-processors {
    post-processor "artifice" {
      files = [
        "output-virtualbox-iso/windows_2012_{{.Provider}}.box"
      ]
    }
    post-processor "vagrant" {
      keep_input_artifact = false //artifact will be deleted
      output              = "windows_2012_{{.Provider}}.box"
      provider_override   = "virtualbox"
    }
  }
}